name: First CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main



permissions: read-all

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: "Downloading repository"
      uses: actions/checkout@v3

    - name: "Set up Python"
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: "Install dependencies"
      run: |
        pip install -r requirements.txt 
        pip install pytest-cov  
        
    - name: "Run tests with coverage"
      run: pytest -vv --cov=. tests

  inter:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write

    steps:
      - name: "Downloading repository"
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - name: "Install dependencies"
        run: |
          pip install -r requirements.txt 
          pip install ruff

      - name: "Cache super-linter"
        uses: actions/cache@v3
        with:
          path: .cache/super-linter
          key: ${{ runner.os }}-super-linter-${{ hashFiles('**/*.py') }} # Cache the linter to speed up the process after the first run
          restore-keys: |
            ${{ runner.os }}-super-linter-

      - name: "Super-Linter"
        uses: super-linter/super-linter/slim@v7.1.0
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_RUFF: true
          CACHE_DIR: .cache/super-linter


      - name: "Run Ruff Formatter (Check mode)"
        id: ruff_check
        run: |
          ruff format --diff --check .
        continue-on-error: true

      - name: "Run Ruff Formatter (Fix mode)"
        if: ${{ steps.ruff_check.outcome == 'failure' }}
        run: |
          ruff format .

      - name: "Commit and push changes"
        if: ${{ steps.ruff_check.outcome == 'failure' }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Automated code formatting by Ruff"
          git push origin ${{ github.head_ref }}

      - name: "Display linter results"
        run: |
          cat super-linter-output/super-linter-summary.md
